/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.CadastroUsuarioController;
import Controllers.GerenciamentoPratoController;
import Controllers.GerenciamentoUsuarioController;
import DAO.PratoDAO;
import DAO.UsuarioDAO;
import Models.Prato;
import Models.Usuario;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Csarp
 */
public class CadastroPratosView extends javax.swing.JFrame {

    /**
     * Creates new form RegisterView
     */
    public CadastroPratosView() {
        initComponents();
        
        
        
        
       

        
    }
    
   private void atualizarTabelaPratos() {
    // Limpa os dados existentes na tabela
    DefaultTableModel model = (DefaultTableModel) tabelaPratos.getModel();
    model.setRowCount(0);
    
    // Obtém a lista atualizada de pratos do controlador
    GerenciamentoPratoController controller = new GerenciamentoPratoController(); // Suponha que você tenha uma classe GerenciamentoPratoController para lidar com os pratos
    List<Prato> pratos = controller.listarPratos();
    
    // Preenche a tabela com os novos dados dos pratos
    for (Prato prato : pratos) {
        Object[] rowData = {prato.getId(), prato.getNome(), prato.getPreco(), prato.getDetalhes()};
        model.addRow(rowData);
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPratos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        nomePrato = new javax.swing.JTextField();
        precoPrato = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        id_prato = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        detalhesPrato = new javax.swing.JTextField();
        Editar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setText("@Cluwt");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inicio.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 60, 450, 350));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 550));

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("X");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3);
        jLabel3.setBounds(403, 0, 31, 28);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Gerência dos Pratos:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(6, 40, 428, 51);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Eita, hora de tirar e adicionar pratos!");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(0, 97, 434, 18);

        tabelaPratos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Preço", "Detalhes"
            }
        ));
        tabelaPratos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPratosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaPratos);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 130, 420, 180);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel7.setText("Prato:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 50, -1));

        nomePrato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomePrato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nomePrato.setBorder(null);
        nomePrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePratoActionPerformed(evt);
            }
        });
        jPanel3.add(nomePrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 160, -1));

        precoPrato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        precoPrato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        precoPrato.setBorder(null);
        jPanel3.add(precoPrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 160, -1));

        label.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        label.setText("ID:");
        jPanel3.add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 30, -1));

        id_prato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        id_prato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id_prato.setText("0");
        id_prato.setBorder(null);
        jPanel3.add(id_prato, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 160, -1));

        jLabel9.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel9.setText("Preço");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 50, -1));

        jLabel10.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel10.setText("Detalhes:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 60, -1));

        detalhesPrato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        detalhesPrato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        detalhesPrato.setBorder(null);
        jPanel3.add(detalhesPrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 160, -1));

        jPanel2.add(jPanel3);
        jPanel3.setBounds(10, 330, 270, 140);

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        jPanel2.add(Editar);
        Editar.setBounds(290, 430, 130, 40);

        jButton2.setText("Adicionar");
        jButton2.setMaximumSize(new java.awt.Dimension(72, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(72, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(290, 330, 130, 40);

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(290, 380, 130, 40);

        jButton1.setText("Atualizar Tabela de Pratos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(10, 480, 410, 60);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 440, 550));

        setSize(new java.awt.Dimension(856, 548));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       // Configuração da conexão com o banco de dados
String url = "jdbc:mysql://localhost:3306/sistemarestaurante";
String usuario = "root";
String senha = "";

// Consulta SQL para recuperar os pratos
String sql = "SELECT * FROM pratos";

// Criação do modelo de tabela
DefaultTableModel modeloTabela = new DefaultTableModel();

// Configuração das colunas
modeloTabela.addColumn("ID");
modeloTabela.addColumn("Nome");
modeloTabela.addColumn("Preço");
modeloTabela.addColumn("Detalhes");

try {
    // Conexão com o banco de dados
    Connection conexao = DriverManager.getConnection(url, usuario, senha);
    Statement statement = conexao.createStatement();

    // Execução da consulta
    ResultSet resultSet = statement.executeQuery(sql);

    // Preenchimento do modelo de tabela com os dados dos pratos
    while (resultSet.next()) {
        int id = resultSet.getInt("id");
        String nome = resultSet.getString("nome");
        double preco = resultSet.getDouble("preco");
        String detalhes = resultSet.getString("detalhes");
        modeloTabela.addRow(new Object[]{id, nome, preco, detalhes});
    }

    // Fechamento dos recursos
    resultSet.close();
    statement.close();
    conexao.close();
} catch (SQLException e) {
    e.printStackTrace();
}

// Atribuição do modelo de tabela à JTable
tabelaPratos.setModel(modeloTabela);

    }//GEN-LAST:event_formWindowOpened

    
    
    private void tabelaPratosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPratosMouseClicked
                                              
    // Obtém o modelo da tabela
    DefaultTableModel model = (DefaultTableModel) tabelaPratos.getModel();
    
    // Obtém o índice da linha clicada
    int rowIndex = tabelaPratos.getSelectedRow();
    
    // Verifica se uma linha foi selecionada
    if (rowIndex != -1) {
        // Obtém os valores das colunas da linha selecionada
        int id2 = Integer.parseInt(model.getValueAt(rowIndex, 0).toString()); // Coluna do ID (índice 0)
        String username = model.getValueAt(rowIndex, 1).toString(); // Coluna do username (índice 1)
        String password = model.getValueAt(rowIndex, 2).toString();
        String detalhes = model.getValueAt(rowIndex, 3).toString();// Coluna da senha (índice 2)
        
        // Preenche os campos de Usuario e Senha com os valores obtidos
        id_prato.setText(String.valueOf(id2));
        nomePrato.setText(username); // Verifique se este índice está correto
        precoPrato.setText(password); // Verifique se este índice está correto
        detalhesPrato.setText(detalhes);

    }

    }//GEN-LAST:event_tabelaPratosMouseClicked

    private void nomePratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomePratoActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
      // Obtém os valores dos campos de texto
    int id = Integer.parseInt(id_prato.getText());
    String nome = nomePrato.getText();
    double preco = Double.parseDouble(precoPrato.getText());
    String detalhes = detalhesPrato.getText();

    // Cria uma instância do controller do prato
    GerenciamentoPratoController GerenciamentoPratoController = new GerenciamentoPratoController();

    // Chama o método de edição do prato, passando os novos valores
    if (GerenciamentoPratoController.editarPrato(id, nome, preco, detalhes)) {
        JOptionPane.showMessageDialog(null, "Prato editado com sucesso!");
        // Atualiza a tabela de pratos para refletir as mudanças
        
    } else {
        JOptionPane.showMessageDialog(null, "Erro ao editar o prato. Verifique os dados e tente novamente.");
    }
    atualizarTabelaPratos();
    }//GEN-LAST:event_EditarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String nome = nomePrato.getText();
        double preco = Double.parseDouble(precoPrato.getText());
        String detalhes = detalhesPrato.getText();
        
         PratoDAO pratoDAO = new PratoDAO();
        try {
            pratoDAO.adicionarPrato(nome, preco, detalhes);
            JOptionPane.showMessageDialog(this, "Prato adicionado com sucesso!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao adicionar prato: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        
    }
        atualizarTabelaPratos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     // Instanciar o DAO do Prato
    PratoDAO pratoDAO = new PratoDAO();
    
    // Obter o ID do prato a ser excluído
    String idPratoTexto = id_prato.getText();
    
    // Verificar se o campo não está vazio
    if (!idPratoTexto.isEmpty()) {
        int idPrato = Integer.parseInt(idPratoTexto); // Converte o texto do ID para um inteiro
        try {
            // Chamar o método do DAO para excluir o prato
            if (pratoDAO.excluirPrato(idPrato)) {
                JOptionPane.showMessageDialog(null, "Prato excluído com sucesso!");
                System.out.println("Prato excluído com sucesso.");
                
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir o prato. Verifique o ID fornecido.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPratosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Por favor, insira o ID do prato.", "Erro", JOptionPane.ERROR_MESSAGE);
    }

    atualizarTabelaPratos();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        atualizarTabelaPratos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
         AdministradorView AdministradorView = new AdministradorView();
        AdministradorView.setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPratosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editar;
    private javax.swing.JTextField detalhesPrato;
    private javax.swing.JTextField id_prato;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JTextField nomePrato;
    private javax.swing.JTextField precoPrato;
    private javax.swing.JTable tabelaPratos;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabelaUsuarios() {
        // Limpa os dados existentes na tabela
    DefaultTableModel model = (DefaultTableModel) tabelaPratos.getModel();
    model.setRowCount(0);
    
    // Obtém a lista atualizada de usuários do controlador
    GerenciamentoUsuarioController controller = new GerenciamentoUsuarioController();
    List<Usuario> usuarios = controller.listarUsuarios();
    
    // Preenche a tabela com os novos dados dos usuários
    for (Usuario usuario : usuarios) {
        Object[] rowData = {usuario.getId(), usuario.getUsername(), usuario.getPassword()};
        model.addRow(rowData);
    }
} }
